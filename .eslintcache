[{"C:\\react\\my-app\\src\\index.js":"1","C:\\react\\my-app\\src\\App.js":"2","C:\\react\\my-app\\src\\StateProvider.js":"3","C:\\react\\my-app\\src\\reducer.js":"4","C:\\react\\my-app\\src\\MyChatApp.js":"5","C:\\react\\my-app\\src\\firebase.config.js":"6","C:\\react\\my-app\\src\\components\\Login.js":"7","C:\\react\\my-app\\src\\components\\Chat.js":"8","C:\\react\\my-app\\src\\components\\SideBar.js":"9","C:\\react\\my-app\\src\\components\\Message.js":"10","C:\\react\\my-app\\src\\components\\SideBarChat.js":"11","C:\\react\\my-app\\src\\customhook\\useOutsideClick.js":"12","C:\\react\\my-app\\src\\serviceWorker.js":"13"},{"size":407,"mtime":1615345862424,"results":"14","hashOfConfig":"15"},{"size":769,"mtime":1615344456210,"results":"16","hashOfConfig":"15"},{"size":369,"mtime":1615344456273,"results":"17","hashOfConfig":"15"},{"size":306,"mtime":1615344456369,"results":"18","hashOfConfig":"15"},{"size":858,"mtime":1615344456241,"results":"19","hashOfConfig":"15"},{"size":600,"mtime":1615344456307,"results":"20","hashOfConfig":"15"},{"size":527,"mtime":1615344456444,"results":"21","hashOfConfig":"15"},{"size":4944,"mtime":1615344456411,"results":"22","hashOfConfig":"15"},{"size":3787,"mtime":1615344456508,"results":"23","hashOfConfig":"15"},{"size":400,"mtime":1615344456473,"results":"24","hashOfConfig":"15"},{"size":2440,"mtime":1615344456543,"results":"25","hashOfConfig":"15"},{"size":390,"mtime":1615344456998,"results":"26","hashOfConfig":"15"},{"size":4168,"mtime":1615345899922,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15ufiko",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\react\\my-app\\src\\index.js",[],["59","60"],"C:\\react\\my-app\\src\\App.js",[],"C:\\react\\my-app\\src\\StateProvider.js",[],"C:\\react\\my-app\\src\\reducer.js",[],"C:\\react\\my-app\\src\\MyChatApp.js",[],"C:\\react\\my-app\\src\\firebase.config.js",[],"C:\\react\\my-app\\src\\components\\Login.js",[],"C:\\react\\my-app\\src\\components\\Chat.js",["61","62"],"import React, {useState,  useEffect} from 'react';\nimport '../css/chat.css';\nimport {IconButton, Avatar, Button} from '@material-ui/core';\nimport Message from './Message';\nimport firebase from 'firebase';\nimport {db,auth} from '../firebase.config';\nimport SendIcon from '@material-ui/icons/Send';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport {useParams} from 'react-router-dom';\nimport {useStateValue} from '../StateProvider';\nimport TextField from '@material-ui/core/TextField';\nimport {actionTypes} from '../reducer';\n\nexport default function Chat({ showMenu, setShowMenu }) {\n\t\n\tconst [chatInput, setChatInput] = useState('');\n\tconst {roomId} = useParams();\n\tconst [roomName, setRoomName] = useState();\n\tconst [messages, setMessages] = useState([]);\n\tconst [avatar, setAvatar] = useState();\n\tconst [{user}, dispatch] = useStateValue();\n\tconst [redirect, setRedirect] = useState(false);\n\tconst [password, setPassword] = useState('');\n\tconst [warn, setWarn] = useState('');\n\t\n\tconst redirectOrNot = () => {\n\t\tfor(let i = 0; i <= user.roomId.length - 1; i++) {\n\t\t\tif(roomId === user.roomId[i]) {\n\t\t\t\tsetRedirect(true);\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tsetRedirect(false);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tsetWarn('');\n\t\tif(roomId) {\n\t\t\tredirectOrNot();\n\t\t\tdb.collection('rooms').doc(roomId).onSnapshot(snap => \n\t\t\t\tsetRoomName(snap.data()?.name)\n\t\t\t);\n\t\t\tdb.collection('rooms')\n\t\t\t.doc(roomId)\n\t\t\t.collection('messages')\n\t\t\t.orderBy(\"sentAt\", \"asc\")\n\t\t\t.onSnapshot(snapshot => {\n\t\t\t\tsetMessages(snapshot.docs.map(doc => doc.data()))\n\t\t\t});\n\t\t}\n\t\tsetAvatar(Math.floor(Math.random()*5000));\n\t},[roomId, user]);\n\t\n\tconst submit = (e) => {\n\t\tif(roomId) {\n\t\t\te.preventDefault();\n\t\t\tdb.collection('rooms')\n\t\t\t.doc(roomId)\n\t\t\t.collection('messages')\n\t\t\t.add({\n\t\t\t\tmessage: chatInput,\n\t\t\t\tsentAt:  firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\t\tname: user.displayName,\n\t\t\t});\n\t\t\tsetChatInput('');\n\t\t}\n\t}\n\t\n\tconst verifyPassword = (e) => {\n\t\te.preventDefault();\n\t\tdb.collection('rooms').doc(roomId).get()\n\t\t.then(result => {\n\t\t\tif(result.data().password === password) {\n\t\t\t\tif(user.roomId[0] == '') {\n\t\t\t\t\tuser.roomId[0] = roomId;\n\t\t\t\t} else {\n\t\t\t\t\tuser.roomId[user.roomId.length] = roomId;\n\t\t\t\t}\n\t\t\t\tredirectOrNot();\n\t\t\t} else {\n\t\t\t\tsetWarn('wrong password');\n\t\t\t}\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.SET_USER,\n\t\t\t\tpayload: user,\n\t\t\t});\n\t\t})\n\t\t.catch(err=>alert(err.message));\n\t\tsetPassword('');\n\t};\n\t\n\tif(redirect) {\n\t\treturn (\n\t\t\t<div className=\"chat\">\n\t\t\t\t<div className='chat-header'>\n\t\t\t\t\t<IconButton onClick={()=>setShowMenu(!showMenu)} className='menu-btn'>\n\t\t\t\t\t\t<MenuOpenIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t{roomId ? (\n\t\t\t\t\t\t<div className=\"chatheader-info\">\n\t\t\t\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/human/${avatar}.svg`} />\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{roomName}\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{messages[0] ? (new Date(messages[messages.length - 1]?.sentAt?.toDate()).toLocaleString()) : ''}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : ''}\n\t\t\t\t\t<div className=\"sidebar-footer\">\n\t\t\t\t\t\t<Button onClick={()=>auth.signOut()} className=\"logout-btn\">LogOut</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='chat-messages'>\n\t\t\t\t{roomId ? (\n\t\t\t\t\tmessages?.map((msg, index) => (\n\t\t\t\t\t\t<Message sentAt={new Date(msg?.sentAt?.toDate()).toLocaleString()} key={index+1} text={msg?.message} name={msg?.name} />\n\t\t\t\t\t))\n\t\t\t\t):(\n\t\t\t\t\t<h2 className=\"empty-chat\">\n\t\t\t\t\t\tSelect Your Chat room from sidebar OR Create New\n\t\t\t\t\t</h2>\n\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"chat-input\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t  onChange={e => setChatInput(e.target.value)} \n\t\t\t\t\t\t  type=\"text\"\n\t\t\t\t\t\t  value={chatInput}\n\t\t\t\t\t\t  placeholder=\"Enter chat\"/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t  onClick={submit}\n\t\t\t\t\t\t  type=\"submit\"\n\t\t\t\t\t\t  className=\"send-btn\">\n\t\t\t\t\t\t\t<SendIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"chat\">\n\t\t\t\t<div className='chat-header'>\n\t\t\t\t\t<IconButton onClick={()=>setShowMenu(!showMenu)} className='menu-btn'>\n\t\t\t\t\t\t<MenuOpenIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<div className=\"chatheader-info\">\n\t\t\t\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/human/${avatar}.svg`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sidebar-footer\">\n\t\t\t\t\t\t<Button onClick={()=>auth.signOut()} className=\"logout-btn\">LogOut</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='chat-messages'>\n\t\t\t\t{roomId ? (\n\t\t\t\t\t<form className=\"empty-chat\">\n\t\t\t\t\t\t<h3>{roomName}</h3>\n\t\t\t\t\t\t<p style={{color:'crimson'}}>{warn}</p>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t  id=\"standard-password-input\"\n\t\t\t\t\t\t  label=\"Password\"\n\t\t\t\t\t\t  type=\"password\"\n\t\t\t\t\t\t  autoComplete=\"current-password\"\n\t\t\t\t\t\t  value={password}\n\t\t\t\t\t\t  onChange={e=>setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t  type=\"submit\" \n\t\t\t\t\t\t  onClick={verifyPassword}\n\t\t\t\t\t\t>Submit</Button>\n\t\t\t\t\t</form>\n\t\t\t\t):(\n\t\t\t\t\t<h2 className=\"empty-chat\">\n\t\t\t\t\t\tSelect Your Chat room from sidebar OR Create New\n\t\t\t\t\t</h2>\n\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}","C:\\react\\my-app\\src\\components\\SideBar.js",["63"],"import React, {useState,useEffect} from 'react';\nimport '../css/sidebar.css';\nimport {Avatar,  Button} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SideBarChat from './SideBarChat';\nimport {db} from '../firebase.config';\nimport {useStateValue} from '../StateProvider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function SideBar({showMenu, setShowMenu}) {\n\t\n\tconst [ searchInput, setSearchInput ] = useState('');\n\tconst [ rooms, setRooms ] = useState([]);\n\tconst [{user}] = useStateValue();\n\tconst [ newRoomInput , setNewRoomInput ] = useState('');\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\tconst [newRoomPassInput, setNewRoomPassInput] = useState('');\n\t\n\tuseEffect(() => {\n\t\tsetSearchInput('');\n\t\tconst unsubscribe = db.collection('rooms')\n\t\t.onSnapshot(\n\t\t\t(snapshot) => \n\t\t\t\tsetRooms(snapshot.docs.map(doc => ({\n\t\t\t\t\t\tname: doc.data().name,\n\t\t\t\t\t\tid: doc.id\n\t\t\t\t\t})\n\t\t\t\t))\n\t\t);\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t}\n\t},[]);\n\t\n\tconst useStyles = makeStyles((theme) => ({\n\t  typography: {\n\t\tpadding: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t  },\n\t}));\n\n\tconst open = Boolean(anchorEl);\n\tconst id = open ? 'simple-popover' : undefined;\n\tconst classes = useStyles();\n\t\n\tconst createNewRoom = (e) => {\n\t\te.preventDefault();\n\t\tif(newRoomInput !== '') {\n\t\t\tif (newRoomPassInput !== '') {\n\t\t\t\tdb.collection('rooms').add({\n\t\t\t\t\tname: newRoomInput,\n\t\t\t\t\tpassword: newRoomPassInput,\n\t\t\t\t\tadmin: user.email,\n\t\t\t\t});\n\t\t\t\tsetAnchorEl(null);\n\t\t\t\tsetNewRoomInput('');\n\t\t\t\tsetNewRoomPassInput('');\n\t\t\t} else {\n\t\t\t\talert('password can not be empty');\n\t\t\t}\n\t\t} else {\n\t\t\talert('name can not be empty');\n\t\t}\n\n\t};\n\t\n\treturn (\n\t\t<div \n\t\t  style={{ marginLeft: `${showMenu ? \"0\" : \"-320px\"}` }}\n\t\t  className=\"sidebar\" \n\t\t>\n\t\t\t<div className=\"sidebar-header\">\n\t\t\t\t<Avatar src={user?.photoURL} className='sidebar-avatar' />\n\t\t\t\t<div className=\"sidebar-input\">\n\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={e => setSearchInput(e.target.value)}\n\t\t\t\t\t\tvalue={searchInput}\n\t\t\t\t\t\tplaceholder='search name...' \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{marginBottom: '10px'}}>\n\t\t\t\t<Button \n\t\t\t\t  aria-describedby={id} \n\t\t\t\t  variant=\"contained\" \n\t\t\t\t  color=\"primary\" \n\t\t\t\t  className=\"addroom-btn\" \n\t\t\t\t  onClick={(e)=>setAnchorEl(e.currentTarget)}>\n\t\t\t\t\tAdd New Room\n\t\t\t\t</Button>\n\t\t\t\t<Popover \n\t\t\t\t  id={id} \n\t\t\t\t  open={open} \n\t\t\t\t  anchorEl={anchorEl}\n\t\t\t\t  onClose={()=>setAnchorEl(null)} \n\t\t\t\t  anchorOrigin={{vertical: 'bottom',horizontal: 'center',}}\t\n\t\t\t\t  transformOrigin={{ vertical: 'top',horizontal: 'center',}}>\n\t\t\t\t\t<div className={classes.typography}>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t  id=\"standard-password\"\n\t\t\t\t\t\t\t  label=\"Enter name of new room\"\n\t\t\t\t\t\t\t  type=\"text\" \n\t\t\t\t\t\t\t  autoComplete=\"current-password\"\n\t\t\t\t\t\t\t  value={newRoomInput}\n\t\t\t\t\t\t\t  onChange={e=>setNewRoomInput(e.target.value)}\n\t\t\t\t\t\t\t  autoFocus\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t <br/><br/>\n\t\t\t\t\t\t\t <TextField\n\t\t\t\t\t\t\t  id=\"standard-password-input\"\n\t\t\t\t\t\t\t  label=\"Enter password\"\n\t\t\t\t\t\t\t  type=\"password\" \n\t\t\t\t\t\t\t  autoComplete=\"current-password\"\n\t\t\t\t\t\t\t  onChange={e => setNewRoomPassInput(e.target.value)}\n\t\t\t\t\t\t\t  value={newRoomPassInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t  type=\"submit\"\n\t\t\t\t\t\t\t  onClick={createNewRoom}>\n\t\t\t\t\t\t\t  Create\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</Popover>\n\t\t\t</div>\n\t\t\t<div className=\"sidebar-chats\">\n\t\t\t{rooms.map(room => {\n\t\t\t\tif(room.name?.search(searchInput) !== -1) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<SideBarChat\n\t\t\t\t\t\t\tkey={room.id}\n\t\t\t\t\t\t\tid={room.id}\n\t\t\t\t\t\t\tshowMenu={showMenu} \n\t\t\t\t\t\t\tsetShowMenu={setShowMenu} \n\t\t\t\t\t\t\tname={room.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n/*\n\n*/","C:\\react\\my-app\\src\\components\\Message.js",[],"C:\\react\\my-app\\src\\components\\SideBarChat.js",["64"],"import React, {useState, useEffect, useRef} from 'react';\nimport '../css/sidebar.css';\nimport {db} from '../firebase.config';\nimport {Avatar} from '@material-ui/core';\nimport {useStateValue} from '../StateProvider';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useOutsideClick from '../customhook/useOutsideClick';\n\nexport default function SideBarChat({setNewRoom, id, showMenu, setShowMenu, name }) {\n\t\n\tconst ref = useRef();\n\tconst [ showOptions, setShowOptions ] = useState(false);\n\tconst [avatar, setAvatar] = useState();\n\tconst [{user}] = useStateValue();\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\t\n\tuseEffect(() => {\n\t\tsetAvatar(Math.floor(Math.random()*5000));\n\t},[id]);\n\t\n\tuseOutsideClick(ref, () => {\n\t\tsetShowOptions(false);\n\t});\n\t\n\tconst deleteRoom = () => {\n\t\tdb.collection('rooms').doc(id).get()\n\t\t.then(result => {\n\t\t\tif(result.data().admin === user.email) {\n\t\t\t\tconst password = prompt(\"Enter password\");\n\t\t\t\tif(password) {\n\t\t\t\t\tif(result.data().password === password) {\n\t\t\t\t\t\tdb.collection('rooms')\n\t\t\t\t\t\t.doc(id)\n\t\t\t\t\t\t.delete()\n\t\t\t\t\t\t.catch(err => alert(err.message));\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert('wrong password');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\talert(\"Only admins are allowed to delete the room\");\n\t\t\t}\n\t\t})\n\t\t.catch(err=>alert(err.message));\n\t};\n\t\n\tconst useStyles = makeStyles((theme) => ({\n\t  typography: {\n\t\tpadding: theme.spacing(2),\n\t  },\n\t}));\n\t\n\tconst open = Boolean(anchorEl);\n\tconst pid = open ? 'simple-popover' : undefined;\n\tconst classes = useStyles();\n\t\n \treturn (\n\t<Link \n\t  aria-describedby={pid} \n\t  variant=\"contained\" \n\t  color=\"primary\" \n\t  className=\"addroom-btn\" \n\t  onClick={(e)=>setAnchorEl(e.currentTarget)} \n\t  to={`/rooms/${id}`}>\n\t\t<div \n\t\t  onClick={()=>window.screen.width<=700?setShowMenu(false):''}\n\t\t  className=\"sidebar-chat-a\"\n\t\t>\n\t\t\t<div className=\"sidebar-chat\">\n\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/human/${avatar}.svg`} />\n\t\t\t\t<div className=\"sidebar-chat-info\">\n\t\t\t\t\t<h3>{name}</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"more-option\"  ref={ref}>\n\t\t\t\t\t<MoreHorizIcon \n\t\t\t\t\t  onClick={()=>setShowOptions(!showOptions)} \n\t\t\t\t\t  className=\"icon\" \n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t  style={{ display: showOptions ? \"block\" : \"none\"}}\n\t\t\t\t\t  className=\"delete-option\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<p onClick={deleteRoom}>Delete</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</Link>\n\t)\n}","C:\\react\\my-app\\src\\customhook\\useOutsideClick.js",[],["65","66"],"C:\\react\\my-app\\src\\serviceWorker.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":53,"column":4,"nodeType":"73","endLine":53,"endColumn":18,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":75,"column":23,"nodeType":"77","messageId":"78","endLine":75,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":132,"column":20,"nodeType":"81","messageId":"82","endLine":132,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":57,"column":8,"nodeType":"85","messageId":"86","endLine":57,"endColumn":15},{"ruleId":"67","replacedBy":"87"},{"ruleId":"69","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirectOrNot'. Either include it or remove the dependency array.","ArrayExpression",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [redirectOrNot, roomId, user]",{"range":"94","text":"95"},[1606,1620],"[redirectOrNot, roomId, user]"]